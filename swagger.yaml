openapi: 3.0.0
info:
  title: Digital Wallet API
  version: 1.0.0
  description: API documentation for the Digital Wallet System

servers:
  - url: http://localhost:3000
    description: Development server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        wallet:
          type: object
          properties:
            balance:
              type: number
            bonusBalance:
              type: number
            currency:
              type: string
        isActive:
          type: boolean
        createdAt:
          type: string
          format: date-time

    Transaction:
      type: object
      properties:
        _id:
          type: string
        type:
          type: string
          enum: [DEPOSIT, WITHDRAWAL, TRANSFER, BONUS]
        amount:
          type: number
        currency:
          type: string
        fromUser:
          type: string
        toUser:
          type: string
        status:
          type: string
          enum: [PENDING, COMPLETED, FAILED, FLAGGED]
        fraudScore:
          type: number
        fraudFlags:
          type: array
          items:
            type: string
        createdAt:
          type: string
          format: date-time

paths:
  /api/auth/register:
    post:
      summary: Register a new user
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - firstName
                - lastName
              properties:
                email:
                  type: string
                password:
                  type: string
                firstName:
                  type: string
                lastName:
                  type: string
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Invalid input

  /api/auth/login:
    post:
      summary: Login user
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
        '401':
          description: Invalid credentials

  /api/auth/profile:
    get:
      summary: Get current user profile
      tags: [Authentication]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile retrieved successfully
        '401':
          description: Unauthorized

  /api/wallet/balance:
    get:
      summary: Get wallet balance
      tags: [Wallet]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Balance retrieved successfully
        '401':
          description: Unauthorized

  /api/wallet/deposit:
    post:
      summary: Deposit funds
      tags: [Wallet]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - amount
              properties:
                amount:
                  type: number
                currency:
                  type: string
      responses:
        '200':
          description: Deposit successful
        '400':
          description: Invalid input
        '401':
          description: Unauthorized

  /api/wallet/withdraw:
    post:
      summary: Withdraw funds
      tags: [Wallet]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - amount
              properties:
                amount:
                  type: number
                currency:
                  type: string
      responses:
        '200':
          description: Withdrawal successful
        '400':
          description: Invalid input
        '401':
          description: Unauthorized

  /api/wallet/transfer:
    post:
      summary: Transfer funds
      tags: [Wallet]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - toUserId
                - amount
              properties:
                toUserId:
                  type: string
                amount:
                  type: number
                currency:
                  type: string
      responses:
        '200':
          description: Transfer successful
        '400':
          description: Invalid input
        '401':
          description: Unauthorized

  /api/wallet/transactions:
    get:
      summary: Get transaction history
      tags: [Wallet]
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
        - in: query
          name: skip
          schema:
            type: integer
      responses:
        '200':
          description: Transactions retrieved successfully
        '401':
          description: Unauthorized

  /api/admin/users:
    get:
      summary: Get all users
      tags: [Admin]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Users retrieved successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

  /api/admin/users/{userId}:
    get:
      summary: Get user details
      tags: [Admin]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User details retrieved successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: User not found

  /api/admin/users/{userId}/status:
    patch:
      summary: Update user status
      tags: [Admin]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - isActive
              properties:
                isActive:
                  type: boolean
      responses:
        '200':
          description: User status updated successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: User not found

  /api/admin/transactions/flagged:
    get:
      summary: Get flagged transactions
      tags: [Admin]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Flagged transactions retrieved successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

  /api/admin/reports/fraud:
    get:
      summary: Get daily fraud report
      tags: [Admin]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Fraud report retrieved successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

  /api/admin/statistics:
    get:
      summary: Get system statistics
      tags: [Admin]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Statistics retrieved successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden 